scenario_5 = "Scenario 5_1",
scenario_6 = "scenario 6_1",)
scenario_data = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, starts_with("scenario"))
attractiveness_ratings = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, !starts_with("scenario")) %>%
pivot_longer(cols=-c(pp_num, pp_age, pp_sex, morality_score)) %>%
#
# in name, unattractive F+M10_1 should be unattractive F10+M1_1, for M_1 to M_6
#
mutate(
name=ifelse(name=="unattractive F+M10_1", "unattractive F10+M1_1", name),
name=ifelse(name=="unattractive F+M10_2", "unattractive F10+M1_2", name),
name=ifelse(name=="unattractive F+M10_3", "unattractive F10+M1_3", name),
name=ifelse(name=="unattractive F+M10_4", "unattractive F10+M1_4", name),
name=ifelse(name=="unattractive F+M10_5", "unattractive F10+M1_5", name),
name=ifelse(name=="unattractive F+M10_6", "unattractive F10+M1_6", name)
)
View(attractiveness_ratings)
a = attractiveness_ratings
a$stim_sex=as.character(NA)
a <-
a %>%
# get the male / female component of the spreadsheet header and strip spaces from it
mutate(
stim_sex =
str_remove_all(
str_extract(name, pattern="\\sfemale|\\smale|female|male|F"),
" ")
) %>%
# convert F to female
mutate(stim_sex=ifelse(stim_sex=="F", "female", stim_sex)) %>%
mutate(stim_sex=as_factor(stim_sex))
# are they rating a face or how likely that face was to commit the act in the morality fable?
# the presence of capital M denotes morality fable response
a$rating_what = as.character(NA)
a=a %>% mutate(rating_what = ifelse(
str_detect(name,"M"), "morality", "attractiveness"
))
# if they are rating morality, which of six fables?
a$which_morality=as.character(NA)
a=a %>%
mutate(which_morality = str_extract(name, pattern=regex("M_."))) %>%
mutate(which_morality = str_remove(which_morality, "M_"))
# extract stimulus number from name
a$stim_num = as.numeric(NA)
a = a %>% mutate(temp=str_remove(name, pattern="unattractive\\s|attractive\\s|attractive|unattractive"))
a = a %>% separate(temp, sep="_", into=c("stem","discard")) %>% select(-discard)
# manually correct a male without a number who is deduced to be male2
a = a %>% mutate(stem=ifelse(stem=="male ", "male2", stem)) # notice the wierd character, maybe a non-breaking space
# attractive male 15+M_* should be 5 not 15
a = a %>% mutate(stem=str_replace(stem, "15","5"))
a = a %>% mutate(try=readr::parse_number(stem))
View(a)
View(a %>% filter(pp_num==1, stim_sex=="female"))
View(a %>% filter(pp_num==1, stim_sex=="female",!is.na(which_morality)))
View(a %>% filter(pp_num==1, stim_sex=="female",!is.na(which_morality)) %>% arrange(try))
View(a)
library(tidyverse)
dd <-
#read_csv("Clean_Names_JASP_data_Attractiveness_and_gender_influence_on_morality.csv", show_col_types = F) %>%
read_csv("JASP data Attractiveness and gender influence on morality.csv") %>% select_if(function(x){!all(is.na(x))}) %>%
#select(-c(290,291,292,293,294,295,296,297,298)) %>%
mutate(pp_num=seq_along(`participant gender`)) %>%
dplyr::rename(pp_age = `participant age`, pp_sex=`participant gender`, morality_score=`morality judgment_SC0`) %>%
relocate(pp_num, pp_age, pp_sex, morality_score) %>%
mutate(pp_sex=str_to_lower(pp_sex)) %>%
mutate(pp_sex=as_factor(pp_sex))
dd <- dd %>%
rename(
scenario_1 = `scenario 1 _1`, # notice the special character, maybe a non-breaking space
scenario_2 = "Scenario 2_1",
scenario_3 = "scenario 3_1",
scenario_4 = "Scenario 4_1",
scenario_5 = "Scenario 5_1",
scenario_6 = "scenario 6_1",)
scenario_data = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, starts_with("scenario"))
attractiveness_ratings = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, !starts_with("scenario")) %>%
pivot_longer(cols=-c(pp_num, pp_age, pp_sex, morality_score)) %>%
#
# in name, unattractive F+M10_1 should be unattractive F10+M1_1, for M_1 to M_6
#
mutate(
name=ifelse(name=="unattractive F+M10_1", "unattractive F10+M1_1", name),
name=ifelse(name=="unattractive F+M10_2", "unattractive F10+M1_2", name),
name=ifelse(name=="unattractive F+M10_3", "unattractive F10+M1_3", name),
name=ifelse(name=="unattractive F+M10_4", "unattractive F10+M1_4", name),
name=ifelse(name=="unattractive F+M10_5", "unattractive F10+M1_5", name),
name=ifelse(name=="unattractive F+M10_6", "unattractive F10+M1_6", name)
)
a = attractiveness_ratings
a$stim_sex=as.character(NA)
a <-
a %>%
# get the male / female component of the spreadsheet header and strip spaces from it
mutate(
stim_sex =
str_remove_all(
str_extract(name, pattern="\\sfemale|\\smale|female|male|F"),
" ")
) %>%
# convert F to female
mutate(stim_sex=ifelse(stim_sex=="F", "female", stim_sex)) %>%
mutate(stim_sex=as_factor(stim_sex))
# are they rating a face or how likely that face was to commit the act in the morality fable?
# the presence of capital M denotes morality fable response
a$rating_what = as.character(NA)
a=a %>% mutate(rating_what = ifelse(
str_detect(name,"M"), "morality", "attractiveness"
))
# if they are rating morality, which of six fables?
a$which_morality=as.character(NA)
a=a %>%
mutate(which_morality = str_extract(name, pattern=regex("M_."))) %>%
mutate(which_morality = str_remove(which_morality, "M_"))
# extract stimulus number from name
a$stim_num = as.numeric(NA)
a = a %>% mutate(temp=str_remove(name, pattern="unattractive\\s|attractive\\s|attractive|unattractive"))
a = a %>% separate(temp, sep="_", into=c("stem","discard")) %>% select(-discard)
# manually correct a male without a number who is deduced to be male2
a = a %>% mutate(stem=ifelse(stem=="male ", "male2", stem)) # notice the wierd character, maybe a non-breaking space
# attractive male 15+M_* should be 5 not 15
a = a %>% mutate(stem=str_replace(stem, "15","5"))
a = a %>% mutate(stim_num=readr::parse_number(stem))
View(a)
View(a %>% arrange(pp_num,pp_age,pp_sex,rating_what,stim_num))
with(a, table(stim_sex,stim_num))
with(a %>% filter(pp_num==1), table(stim_sex,stim_num))
View(a %>% arrange(pp_num,rating_what,stim_num))
View(a %>% arrange(pp_num,rating_what,stim_sex,stim_num))
library(tidyverse)
dd <-
#read_csv("Clean_Names_JASP_data_Attractiveness_and_gender_influence_on_morality.csv", show_col_types = F) %>%
read_csv("JASP data Attractiveness and gender influence on morality.csv") %>% select_if(function(x){!all(is.na(x))}) %>%
#select(-c(290,291,292,293,294,295,296,297,298)) %>%
mutate(pp_num=seq_along(`participant gender`)) %>%
dplyr::rename(pp_age = `participant age`, pp_sex=`participant gender`, morality_score=`morality judgment_SC0`) %>%
relocate(pp_num, pp_age, pp_sex, morality_score) %>%
mutate(pp_sex=str_to_lower(pp_sex)) %>%
mutate(pp_sex=as_factor(pp_sex))
dd <- dd %>%
rename(
scenario_1 = `scenario 1 _1`, # notice the special character, maybe a non-breaking space
scenario_2 = "Scenario 2_1",
scenario_3 = "scenario 3_1",
scenario_4 = "Scenario 4_1",
scenario_5 = "Scenario 5_1",
scenario_6 = "scenario 6_1",)
scenario_data = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, starts_with("scenario"))
attractiveness_ratings = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, !starts_with("scenario")) %>%
pivot_longer(cols=-c(pp_num, pp_age, pp_sex, morality_score)) %>%
#
# in name, unattractive F+M10_1 should be unattractive F10+M1_1, for M_1 to M_6
#
mutate(
name=ifelse(name=="unattractive F+M10_1", "unattractive F10+M1_1", name),
name=ifelse(name=="unattractive F+M10_2", "unattractive F10+M1_2", name),
name=ifelse(name=="unattractive F+M10_3", "unattractive F10+M1_3", name),
name=ifelse(name=="unattractive F+M10_4", "unattractive F10+M1_4", name),
name=ifelse(name=="unattractive F+M10_5", "unattractive F10+M1_5", name),
name=ifelse(name=="unattractive F+M10_6", "unattractive F10+M1_6", name)
)
a = attractiveness_ratings
a$stim_sex=as.character(NA)
a <-
a %>%
# get the male / female component of the spreadsheet header and strip spaces from it
mutate(
stim_sex =
str_remove_all(
str_extract(name, pattern="\\sfemale|\\smale|female|male|F"),
" ")
) %>%
# convert F to female
mutate(stim_sex=ifelse(stim_sex=="F", "female", stim_sex)) %>%
mutate(stim_sex=as_factor(stim_sex))
# are they rating a face or how likely that face was to commit the act in the morality fable?
# the presence of capital M denotes morality fable response
a$rating_what = as.character(NA)
a=a %>% mutate(rating_what = ifelse(
str_detect(name,"M"), "morality", "attractiveness"
))
# if they are rating morality, which of six fables?
a$which_morality=as.character(NA)
a=a %>%
mutate(which_morality = str_extract(name, pattern=regex("M_."))) %>%
mutate(which_morality = str_remove(which_morality, "M_"))
# extract stimulus number from name
a$stim_num = as.numeric(NA)
a = a %>% mutate(temp=str_remove(name, pattern="unattractive\\s|attractive\\s|attractive|unattractive"))
a = a %>% separate(temp, sep="_", into=c("stem","discard")) %>% select(-discard)
# manually correct a male without a number who is deduced to be male2
a = a %>% mutate(stem=ifelse(stem=="male ", "male 2", stem)) # notice the wierd character, maybe a non-breaking space
# attractive male 15+M_* should be 5 not 15
a = a %>% mutate(stem=str_replace(stem, "15","5"))
a = a %>% mutate(stim_num=readr::parse_number(stem))
View(a %>% arrange(pp_num,rating_what,stim_sex,stim_num))
library(tidyverse)
dd <-
#read_csv("Clean_Names_JASP_data_Attractiveness_and_gender_influence_on_morality.csv", show_col_types = F) %>%
read_csv("JASP data Attractiveness and gender influence on morality.csv") %>% select_if(function(x){!all(is.na(x))}) %>%
#select(-c(290,291,292,293,294,295,296,297,298)) %>%
mutate(pp_num=seq_along(`participant gender`)) %>%
dplyr::rename(pp_age = `participant age`, pp_sex=`participant gender`, morality_score=`morality judgment_SC0`) %>%
relocate(pp_num, pp_age, pp_sex, morality_score) %>%
mutate(pp_sex=str_to_lower(pp_sex)) %>%
mutate(pp_sex=as_factor(pp_sex))
dd <- dd %>%
rename(
scenario_1 = `scenario 1 _1`, # notice the special character, maybe a non-breaking space
scenario_2 = "Scenario 2_1",
scenario_3 = "scenario 3_1",
scenario_4 = "Scenario 4_1",
scenario_5 = "Scenario 5_1",
scenario_6 = "scenario 6_1",)
scenario_data = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, starts_with("scenario"))
attractiveness_ratings = dd %>%
select(pp_num, pp_age, pp_sex, morality_score, !starts_with("scenario")) %>%
pivot_longer(cols=-c(pp_num, pp_age, pp_sex, morality_score)) %>%
#
# in name, unattractive F+M10_1 should be unattractive F10+M_1, for M_1 to M_6
#
mutate(
name=ifelse(name=="unattractive F+M10_1", "unattractive F10+M_1", name),
name=ifelse(name=="unattractive F+M10_2", "unattractive F10+M_2", name),
name=ifelse(name=="unattractive F+M10_3", "unattractive F10+M_3", name),
name=ifelse(name=="unattractive F+M10_4", "unattractive F10+M_4", name),
name=ifelse(name=="unattractive F+M10_5", "unattractive F10+M_5", name),
name=ifelse(name=="unattractive F+M10_6", "unattractive F10+M_6", name)
)
a = attractiveness_ratings
a$stim_sex=as.character(NA)
a <-
a %>%
# get the male / female component of the spreadsheet header and strip spaces from it
mutate(
stim_sex =
str_remove_all(
str_extract(name, pattern="\\sfemale|\\smale|female|male|F"),
" ")
) %>%
# convert F to female
mutate(stim_sex=ifelse(stim_sex=="F", "female", stim_sex)) %>%
mutate(stim_sex=as_factor(stim_sex))
# are they rating a face or how likely that face was to commit the act in the morality fable?
# the presence of capital M denotes morality fable response
a$rating_what = as.character(NA)
a=a %>% mutate(rating_what = ifelse(
str_detect(name,"M"), "morality", "attractiveness"
))
# if they are rating morality, which of six fables?
a$which_morality=as.character(NA)
a=a %>%
mutate(which_morality = str_extract(name, pattern=regex("M_."))) %>%
mutate(which_morality = str_remove(which_morality, "M_"))
# extract stimulus number from name
a$stim_num = as.numeric(NA)
a = a %>% mutate(temp=str_remove(name, pattern="unattractive\\s|attractive\\s|attractive|unattractive"))
a = a %>% separate(temp, sep="_", into=c("stem","discard")) %>% select(-discard)
# manually correct a male without a number who is deduced to be male2
a = a %>% mutate(stem=ifelse(stem=="male ", "male 2", stem)) # notice the wierd character, maybe a non-breaking space
# attractive male 15+M_* should be 5 not 15
a = a %>% mutate(stem=str_replace(stem, "15","5"))
a = a %>% mutate(stim_num=readr::parse_number(stem))
View(a %>% arrange(pp_num,rating_what,stim_sex,stim_num))
# extract attractiveness from the name
a$attr_from_name = as.character(NA)
a=
a %>%
mutate(
attr_from_name =
str_extract(
str_remove_all(name, " "),
pattern="attractive|unattractive"))
View(a)
unique(a$attr_from_name)
# calculate median attractiveness
a$median_attractiveness = as.numeric(NA)
a=a %>% group_by(pp_num) %>% mutate(median_attractiveness = median(value))
View(a)
a=a %>% mutate(attractiveness_rating = ifelse(rating_what=="attractiveness", value, NA))
View(a)
?median
median(c(2,3))
median(c(2,3,NA))
a=a %>% group_by(pp_num) %>% mutate(median_attractiveness = median(attractiveness_rating))
a
iew(a)
View(a)
source("~/gits/lilly-qualtrics-data/process.R")
View(a)
a=a %>% group_by(pp_num) %>% mutate(median_attractiveness = median(attractiveness_rating, na.rm=TRUE))
View(a)
vals=a %>% filter(pp_num==1)
vals=a %>% filter(pp_num==1) %>% select(attractiveness_rating)
vals
View(vals)
vals=a %>% filter(pp_num==1) %>% select(attractiveness_rating) %>% na.omit
median(vals$attractiveness_rating)
source("~/gits/lilly-qualtrics-data/process.R")
View(a)
# calculate median split and assign high or low
range(a$attractiveness_rating)
# calculate median split and assign high or low
range(a$attractiveness_rating, na.rm = T)
median(c(1.5))
median(c(1,5))
# calculate median split and assign high or low
a=
a %>%
mutate(
median_split =
ifelse(attractiveness_rating > median_attractiveness, "highly-attractive",
ifelse(attractiveness_rating < median_attractiveness, "highly-attractive",
ifelse(attractiveness_rating == median_attractiveness, "median-attractive",NA))))
View(a)
with(a, table(median_split))
# calculate median split and assign high or low
a=
a %>%
mutate(
median_split =
ifelse(attractiveness_rating > median_attractiveness, "high-attractive",
ifelse(attractiveness_rating < median_attractiveness, "low-attractive",
ifelse(attractiveness_rating == median_attractiveness, "median-attractive",NA))))
with(a, table(median_split))
?median_hilow
median_hilow(a$median_split)
a$median_split
median_hilow(a$attractiveness_rating)
source("~/gits/lilly-qualtrics-data/process.R")
View(a)
source("~/gits/lilly-qualtrics-data/process.R")
source("~/gits/lilly-qualtrics-data/process.R")
View(a)
with(a, table(median_split))
with(a, table(pp_num,median_split))
# morality
a=a %>% mutate(morality_rating = ifelse(rating_what=="morailty", value, NA))
View(a)
# morality
a=a %>% mutate(morality_rating = ifelse(rating_what=="morality", value, NA))
View(a)
# morality
a=a %>% mutate(morality_rating = ifelse(rating_what=="morality", value, NA))
a=a %>%
group_by(pp_num, stim_num, stim_sex) %>%
mutate(mean_morality=mean(morality_rating)) %>%
ungroup()
View(a)
source("~/gits/lilly-qualtrics-data/process.R")
View9a
view(a)
view(a %>% filter(pp_num==1))
view(a %>% filter(pp_num==1) %>% arrange(stim_sex,stim_num))
view(a %>% filter(pp_num==1, !is.na(which_morality)) %>% arrange(stim_sex,stim_num))
m=a %>% filter(!is.na(which_morality))
view(m)
m=a %>% filter(!is.na(which_morality)) %>% select(pp_num, morality_score, stim_sex,stim_num,which_morality, morality_rating, mean_morality)
view(m)
m=a %>% filter(!is.na(which_morality)) %>% select(pp_num, morality_score, stim_sex,stim_num,which_morality, morality_rating, mean_morality) %>% arrange()
view(m)
m=a %>% filter(!is.na(which_morality)) %>% select(pp_num, morality_score, stim_sex,stim_num,which_morality, morality_rating, mean_morality) %>% arrange(pp_num,stim_sex,stim_num)
view(m)
m=a %>% filter(!is.na(which_morality)) %>% select(pp_num, morality_score, stim_sex,stim_num,attr_from_name,which_morality, morality_rating, mean_morality) %>% arrange(pp_num,stim_sex,stim_num)
view(m)
view(scenario_data)
library(tidyverse)
dd <-
#read_csv("Clean_Names_JASP_data_Attractiveness_and_gender_influence_on_morality.csv", show_col_types = F) %>%
read_csv("JASP data Attractiveness and gender influence on morality.csv") %>% select_if(function(x){!all(is.na(x))}) %>%
#select(-c(290,291,292,293,294,295,296,297,298)) %>%
mutate(pp_num=seq_along(`participant gender`)) %>%
dplyr::rename(pp_age = `participant age`, pp_sex=`participant gender`, morality_score=`morality judgment_SC0`) %>%
relocate(pp_num, pp_age, pp_sex, morality_score) %>%
mutate(pp_sex=str_to_lower(pp_sex)) %>%
mutate(pp_sex=as_factor(pp_sex))
dd <- dd %>%
rename(
scenario_1 = `scenario 1 _1`, # notice the special character, maybe a non-breaking space
scenario_2 = "Scenario 2_1",
scenario_3 = "scenario 3_1",
scenario_4 = "Scenario 4_1",
scenario_5 = "Scenario 5_1",
scenario_6 = "scenario 6_1",)
view(dd)
?pivot_longer
dd
view(who)
dd %>% pivot_longer(cols=starts_with("unattractive|attractive"))
dd
names(dd)
dd %>% pivot_longer(cols=starts_with(regex("unattractive|attractive")))
dd %>% pivot_longer(cols=select(starts_with(regex("unattractive|attractive"))))
dd %>% pivot_longer(cols=c(select(starts_with(regex("unattractive|attractive")))))
dd %>% pivot_longer(cols=c(starts_with("u")
)
)
dd %>% pivot_longer(cols=c(starts_with("u")))
e=dd %>% pivot_longer(cols=c(starts_with("u")))
view(e)
e=dd %>% pivot_longer(cols=c(starts_with("u|a")))
e=dd %>% pivot_longer(cols=c(starts_with(regex("u|a"))))
?starts_with
e=dd %>% pivot_longer(cols=c(starts_with(c("u","a"))))
view(e)
dd <- dd %>%
rename(
"unattractive F+M10_1" = "unattractive F10+M_1"
)
names(dd)
names(dd) %>% sort()
dd <- dd %>%
rename(
"unattractive F10+M_1" = "unattractive F+M10_1"
)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
View(filter(a, str_detect(stem, =="male ")))
View(filter(a, str_detect(stem =="male ")))
View(filter(a, str_detect(stem, "male ")))
View(filter(a, stim_sex=='male'
)
)
View(filter(a, stim_sex=='male', stim_num==2))
dd <- dd %>%
rename(
foo="attractive male 2_1"
)
names(dd)
names(dd) %>% sort()
dd <- dd %>%
rename(
foo="attractive male _1"
)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
dd <- dd %>%
rename(
foo="attractive male _1"
)
dd <- dd %>%
rename(
foo="unattractive male _1"
)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
names(dd)
names(dd) %>% sort()
View(dd %>% filter(name=="unattractive male 3_1"))
View(dd %>% filter(name="unattractive male 3_1"))
View(a %>% filter(name="unattractive male 3_1"))
View(a %>% filter(name=="unattractive male 3_1"))
View(a %>% filter(name=="unattractive male 3_1"))
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
count(a$name)
table(a$name)
foo=(a %>% filter(pp_num==1, stim_sex=="male", stim_num))
foo=(a %>% filter(pp_num==1, stim_sex=="male", stim_num==3))
view(foo)
foo2=(a %>% filter(pp_num==1, stim_sex=="male", stim_num==4))
view(foo2)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
foo=(a %>% filter(pp_num==1, stim_sex=="male", stim_num==3))
foo2=(a %>% filter(pp_num==1, stim_sex=="male", stim_num==4))
view(foo)
view(foo2)
source("~/gits/lilly-qualtrics-data/process.R")
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
dd
View(dd)
e = e %>%
pivot_longer(cols=c("u", "a"))
e = e %>%
pivot_longer(cols=starts_with(c("u", "a")))
e = e %>%
pivot_longer(cols=c(starts_with(c("u", "a"))))
e = e %>%
pivot_longer(cols=c(starts_with("u", "a")))
pivotnames(dd)
names(dd)
e = e %>%
pivot_longer(cols=starts_with("u"))
e
names(e)
names(dd)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
e
e = dd %>%
pivot_longer(cols=starts_with("u", "a"))
e = dd %>%
pivot_longer(cols=starts_with(c("u", "a")))
View(e)
f=e %>% pivot_longer(cols=starts_with("s"))
f=e %>% pivot_longer(cols=starts_with("s"), names_to="scen")
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
view(f)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
view(f)
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
view)f
view(f)
f$scenval
f$scenval %>% uniqque
f$scenval %>% unique()
source("~/gits/lilly-qualtrics-data/process_cleaner_code.R")
view(f)
